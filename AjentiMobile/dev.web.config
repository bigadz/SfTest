<?xml version="1.0" encoding="utf-8"?>
<configuration>

  <!-- To customize the asp.net core module uncomment and edit the following section. 
  For more info see https://go.microsoft.com/fwlink/?linkid=838655 -->
  <!--
  <system.webServer>
    <handlers>
      <remove name="aspNetCore"/>
      <add name="aspNetCore" path="*" verb="*" modules="AspNetCoreModule" resourceType="Unspecified"/>
    </handlers>
    <aspNetCore processPath="%LAUNCHER_PATH%" arguments="%LAUNCHER_ARGS%" stdoutLogEnabled="false" stdoutLogFile=".\logs\stdout" />
  </system.webServer>
  -->

  <!-- The following is based on the web.config of the AdmsJson project
       Btw, the AdmsJson project only uses Json in responses, not requests. (I think it uses XHR?)
       This AjentiMobile project is a generic REST API that expects JSON objects to be posted and returned.
  -->

  <configSections>
    <sectionGroup name="spring">
      <section name="context" type="Spring.Context.Support.ContextHandler, Spring.Core" />
      <section name="objects" type="Spring.Context.Support.DefaultSectionHandler, Spring.Core" />
    </sectionGroup>
    <sectionGroup name="common">
      <section name="logging" type="Common.Logging.ConfigurationSectionHandler, Common.Logging" />
    </sectionGroup>
    <section name="AdministrationConfiguration" type="System.Configuration.NameValueSectionHandler" />
    <section name="DatabaseConfiguration" type="System.Configuration.NameValueSectionHandler" />
    <section name="RdsApiConfiguration" type="System.Configuration.NameValueSectionHandler" />
    <section name="RdsServerConfiguration" type="System.Configuration.NameValueSectionHandler" />
    <section name="AdmsConfiguration" type="System.Configuration.NameValueSectionHandler" />
    <section name="LiveConfiguration" type="System.Configuration.NameValueSectionHandler" />
    <section name="EventConfiguration" type="System.Configuration.NameValueSectionHandler" />
    <section name="PaywayConfiguration" type="System.Configuration.NameValueSectionHandler" />
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
  </configSections>
  <PaywayConfiguration>
    <add key="payway.certificateFile" value="c:\ADMS\Scripts\PayWay\ccapi.q0" />
    <add key="payway.logDirectory" value="c:\ADMS\logs\PayWay\" />
    <add key="payway.customerUsername" value="T10167" />
    <add key="payway.customerPassword" value="Aecn87a8x" />
    <add key="payway.merchantId" value="TEST" />
  </PaywayConfiguration>
  <appSettings>
    <add key="CampbellProxyUrl" value="http://swhtdr0test/TelemetryWs/Campbell/" />
  </appSettings>
  <EventConfiguration>
    <add key="events.mergeMatchingNotifications" value="false" />
  </EventConfiguration>
  <LiveConfiguration>
    <add key="live.systemCode" value="SmartGrid" />
  </LiveConfiguration>
  <AdmsConfiguration>
    <add key="adms.signalRUrl" value="https://data.ajenti.com.au/live/signalr" />
  </AdmsConfiguration>
  <AdministrationConfiguration>
    <add key="administration.rdsServer" value="localhost:Reference Data Server:Reference Data Server" />
    <add key="administration.rulesAdaptor" value="localhost:RDS Rules Adaptor:Rules Adaptor" />
    <add key="administration.eventServer" value="localhost:ADMS Event Service:Event Server" />
    <add key="administration.tdrServer" value="localhost:ADMS Telemetry Data Receiver:Telemetry Data Receiver" />
    <add key="administration.telemetryManager" value="localhost:ADMS Telemetry Manager:Telemetry Manager" />
    <add key="administration.scheduler" value="localhost:ADMS Scheduler:Scheduler" />
    <add key="administration.sqlServer" value="localhost:MSSQLSERVER:SQL Server" />
    <add key="administration.ftpSecure" value="swhtdr0prod:Microsoft FTP Service:FTP Secure" />
    <add key="administration.ftpPublic" value="swhweb2prod:Microsoft FTP Service:FTP Public" />
    <add key="administration.loggerNet" value="swhext0prod:CsiLoggernet:Loggernet" />
    <add key="administration.buildServer" value="swhsvn:TeamCity Web Server:Build Server" />
    <add key="administration.liveManager" value="swhrds0prod:ADMS Live Manager:Live Manager" />
  </AdministrationConfiguration>
  <DatabaseConfiguration>
    <add key="database.adms" value="Server=swhsql0test;Database=ADMS;Integrated Security=true;" />
    <add key="database.datawarehouse" value="Server=localhost;Database=DataWarehouse;Integrated Security=true;" />
  </DatabaseConfiguration>
  <RdsApiConfiguration>
    <add key="rdsapi.rdsServerName" value="localhost" />
    <add key="rdsapi.systemCode" value="ADMS" />
    <add key="rdsapi.keepSubscriptionsAlive" value="true" />
    <add key="rdsapi.subscriptionQueueName" value="private$\TsmIncoming" />
    <add key="rdsapi.allowRdsApiReset" value="true" />
    <add key="rdsapi.directData" value="false" />
    <add key="rdsapi.timeStoreName" value="rdsApi1" />
  </RdsApiConfiguration>
  <RdsServerConfiguration>
    <add key="rds.connectionString" value="Application Name=RDS;Server=localhost;Database=RDS;Trusted_Connection=true" />
    <add key="rds.autoCreateTimeSeries" value="true" />
    <add key="rds.loadEnabled" value="true" />
    <add key="rds.cacheEnabled" value="true" />
    <add key="rds.cacheLifetime" value="900" />
    <add key="rds.enableRegistration" value="false" />
    <add key="rds.daysInBlock" value="15" />
    <add key="rds.eventDataServiceUri" value="net.tcp://localhost:42766/ra/events" />
  </RdsServerConfiguration>
  <!-- Configure Common.Logging adaptor so that Spring logs using log4net -->
  <common>
    <logging>
      <factoryAdapter type="Common.Logging.Log4Net.Log4NetLoggerFactoryAdapter, Common.Logging.Log4Net1213">
        <!-- choices are INLINE, FILE, FILE-WATCH, EXTERNAL-->
        <!-- otherwise BasicConfigurer.Configure is used   -->
        <!-- log4net configuration file is specified with key configFile-->
        <!--<arg key="configType" value="INLINE" />-->
        <arg key="configType" value="FILE-WATCH" />
        <arg key="configFile" value="~/log4net.config" />
      </factoryAdapter>
    </logging>
  </common>
  <spring>
    <context>
      <!-- using objects section embedded below -->
      <resource uri="config://spring/objects" />
    </context>
    <objects xmlns="http://www.springframework.net">
      <object name="appConfigPropertyHolder" type="Spring.Objects.Factory.Config.PropertyPlaceholderConfigurer, Spring.Core">
        <property name="configSections">
          <value>DatabaseConfiguration,AdministrationConfiguration,AdmsConfiguration,PaywayConfiguration</value>
        </property>
      </object>
      <import resource="assembly://AdmsApi/adms.database.api/AdmsApi-Spring2.xml" />
      <import resource="assembly://Common45/common.spring/CommonSpringCaching.xml" />
      <object name="AdmsMembershipProvider" singleton="true" type="AdmsJson.Security.AdmsMembershipProvider, AdmsJson">
        <property name="AdmsApi" ref="AdmsApi" />
      </object>
      <object id="MembershipServiceRef" singleton="true" type="AdmsWeb.Controllers.AccountMembershipService, AdmsWeb">
        <constructor-arg name="provider" ref="AdmsMembershipProvider" />
      </object>
      <!-- Controllers -->
      <object id="AccountController" singleton="false" type="AdmsJson.Controllers.AccountController, AdmsJson">
        <property name="MembershipService" ref="MembershipServiceRef" />
        <property name="AdmsApi" ref="AdmsApi" />
      </object>
      <object id="DataController" singleton="false" type="AdmsJson.Controllers.DataController, AdmsJson">
        <property name="AdmsApi" ref="AdmsApi" />
      </object>
      <object id="EsBoxController" singleton="false" type="AdmsJson.Controllers.EsBoxController, AdmsJson">
        <property name="AdmsApi" ref="AdmsApi" />
      </object>
      <object id="SmartGridController" singleton="false" type="AdmsJson.Controllers.KireipController, AdmsJson">
        <property name="AdmsApi" ref="AdmsApi" />
        <property name="LiveDataClient" ref="LiveDataClient" />
        <property name="SignalRUrl" value="${adms.signalRUrl}" />
      </object>
      <object id="KireipController" singleton="false" type="AdmsJson.Controllers.KireipController, AdmsJson">
        <property name="AdmsApi" ref="AdmsApi" />
        <property name="LiveDataClient" ref="LiveDataClient" />
        <property name="SignalRUrl" value="${adms.signalRUrl}" />
      </object>
      <object id="HogsController" singleton="false" type="AdmsJson.Controllers.HogsController, AdmsJson">
        <property name="AdmsApi" ref="AdmsApi" />
        <property name="LiveDataClient" ref="LiveDataClient" />
      </object>
      <object id="AdelaideController" singleton="false" type="AdmsJson.Controllers.AdelaideController, AdmsJson">
        <property name="AdmsApi" ref="AdmsApi" />
      </object>
      <object id="LiveController" singleton="false" type="AdmsJson.Controllers.LiveController, AdmsJson">
        <property name="AdmsApi" ref="AdmsApi" />
        <property name="LiveDataClient" ref="LiveDataClient" />
      </object>
      <object id="DataViewController" singleton="false" type="AdmsJson.Controllers.DataViewController, AdmsJson">
        <property name="AdmsApi" ref="AdmsApi" />
      </object>
      <object id="MomentumController" singleton="false" type="AdmsJson.Controllers.MomentumController, AdmsJson">
        <property name="AdmsApi" ref="AdmsApi" />
        <property name="LiveDataClient" ref="LiveDataClient" />
      </object>
      <object id="AuroraController" singleton="false" type="AdmsJson.Controllers.AuroraController, AdmsJson">
        <property name="AdmsApi" ref="AdmsApi" />
        <property name="LiveDataClient" ref="LiveDataClient" />
      </object>
      <object id="EnergyController" singleton="false" type="AdmsJson.Controllers.EnergyController, AdmsJson">
        <property name="AdmsApi" ref="AdmsApi" />
        <property name="LiveDataClient" ref="LiveDataClient" />
      </object>
      <object id="WaterController" singleton="false" type="AdmsJson.Controllers.WaterController, AdmsJson">
        <property name="AdmsApi" ref="AdmsApi" />
        <property name="LiveDataClient" ref="LiveDataClient" />
      </object>
      <object id="WeatherController" singleton="false" type="AdmsJson.Controllers.WeatherController, AdmsJson">
        <property name="AdmsApi" ref="AdmsApi" />
        <property name="LiveDataClient" ref="LiveDataClient" />
      </object>
      <object id="FieldController" singleton="false" type="AdmsJson.Controllers.FieldController, AdmsJson">
        <property name="AdmsApi" ref="AdmsApi" />
      </object>
      <object id="InstallationController" singleton="false" type="AdmsWeb.Controllers.InstallationController, AdmsWeb">
        <property name="Adms" ref="AdmsApi" />
      </object>
      <object id="SubscriberController" singleton="false" type="AdmsWeb.Controllers.SubscriberController, AdmsWeb">
        <property name="Adms" ref="AdmsApi" />
      </object>
      <object id="DashboardController" singleton="false" type="AdmsJson.Controllers.DashboardController, AdmsJson">
        <property name="AdmsApi" ref="AdmsApi" />
      </object>
      <object id="FileShareController" singleton="false" type="AdmsWeb.Controllers.FileShareController, AdmsWeb">
        <property name="Adms" ref="AdmsApi" />
      </object>
      <object id="NotificationController" singleton="false" type="AdmsWeb.Controllers.NotificationController, AdmsWeb">
        <property name="Adms" ref="AdmsApi" />
      </object>
      <object id="WorkflowController" singleton="false" type="AdmsWeb.Controllers.WorkflowController, AdmsWeb">
        <property name="Adms" ref="AdmsApi" />
      </object>
      <object id="SiteVisitController" singleton="false" type="AdmsJson.Controllers.SiteVisitController, AdmsJson" />
      <object id="AdministrationController" singleton="false" type="AdmsWeb.Controllers.AdministrationController, AdmsWeb">
        <property name="Adms" ref="AdmsApi" />
        <property name="Services">
          <dictionary key-type="string" value-type="string">
            <entry key="RdsServer" value="${administration.rdsServer}" />
            <entry key="RulesAdaptor" value="${administration.rulesAdaptor}" />
            <entry key="EventServer" value="${administration.eventServer}" />
            <entry key="TdrServer" value="${administration.tdrServer}" />
            <entry key="TelemetryManager" value="${administration.telemetryManager}" />
            <entry key="Scheduler" value="${administration.scheduler}" />
            <entry key="SqlServer" value="${administration.sqlServer}" />
            <entry key="FtpSecure" value="${administration.ftpSecure}" />
            <entry key="FtpPublic" value="${administration.ftpPublic}" />
            <entry key="LoggerNet" value="${administration.loggerNet}" />
            <entry key="BuildServer" value="${administration.buildServer}" />
          </dictionary>
        </property>
      </object>
      <object id="ChartController" singleton="false" type="AdmsWeb.Controllers.ChartController, AdmsWeb">
        <property name="AdmsApi" ref="AdmsApi" />
        <property name="DataWarehouse" ref="DataWarehouseApi" />
        <property name="LiveDataClient" ref="LiveDataClient" />
        <property name="SignalRUrl" value="${adms.signalRUrl}" />
      </object>
      <!-- APIs and Other -->
      <!--<object id="AdmsApiFactory" singleton="true" type="adms.database.api.AdmsApiFactory, AdmsApi" />
      <object id="AdmsApi" singleton="true" factory-object="AdmsApiFactory" factory-method="Create" />-->
      <object id="DataWarehouseApiFactory" singleton="true" type="adms.datawarehouse.api.DataWarehouseApiFactory, DataWarehouseApi">
        <property name="ConnectionString" value="${database.datawarehouse}" />
      </object>
      <object id="DataWarehouseApi" singleton="true" factory-object="DataWarehouseApiFactory" factory-method="Create" />
      <object id="LiveDataClient" singleton="true" type="adms.live.client.LiveDataClientApi, LiveClient" />
    </objects>
  </spring>
  <system.net>
    <mailSettings>
      <smtp from="alerts@ajenti.com.au">
        <network host="smtp.nt.tas.gov.au" port="25" />
      </smtp>
    </mailSettings>
  </system.net>
  <!--
    For a description of web.config changes see http://go.microsoft.com/fwlink/?LinkId=235367.

    The following attributes can be set on the <httpRuntime> tag.
      <system.Web>
        <httpRuntime targetFramework="4.5" />
      </system.Web>
  -->
  <system.web>
    <trust level="Full" />
    <sessionState mode="StateServer" timeout="60" stateConnectionString="tcpip=127.0.0.1:42424" stateNetworkTimeout="10" cookieless="UseCookies" cookieName="ASP.NET_SessionId" regenerateExpiredSessionId="true" partitionResolverType="" useHostingIdentity="true">
      <providers>
        <clear />
      </providers>
    </sessionState>
    <!-- 
            Set compilation debug="true" to insert debugging 
            symbols into the compiled page. Because this 
            affects performance, set this value to true only 
            during development.
    -->
    <compilation debug="true" targetFramework="4.5.2">
      <assemblies>
        <add assembly="System.Web.Mvc, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.WebPages, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Abstractions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Routing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Data.Linq, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
      </assemblies>
    </compilation>
    <!--
            The <authentication> section enables configuration 
            of the security authentication mode used by 
            ASP.NET to identify an incoming user. 
    -->
    <authentication mode="Forms">
      <!--Cookie expiration set for 6 days-->
      <forms loginUrl="~/Account/UnAuthorised" name=".ASPXAUTH" cookieless="UseCookies" requireSSL="false" slidingExpiration="true" timeout="8640" />
    </authentication>
    <membership defaultProvider="AdmsMembershipProvider">
      <providers>
        <clear />
        <!--<add name="AdmsMembershipProvider" type="AdmsWeb.Security.AdmsMembershipProvider" enablePasswordRetrieval="false" enablePasswordReset="false" requiresQuestionAndAnswer="false" requiresUniqueEmail="false" passwordFormat="Hashed" maxInvalidPasswordAttempts="5" minRequiredPasswordLength="6" minRequiredNonalphanumericCharacters="0" passwordAttemptWindow="10" passwordStrengthRegularExpression="" applicationName="/" />-->
        <add name="AdmsMembershipProvider" type="Spring.Web.Providers.MembershipProviderAdapter, Spring.Web" enablePasswordRetrieval="false" enablePasswordReset="false" requiresQuestionAndAnswer="false" requiresUniqueEmail="false" passwordFormat="Hashed" maxInvalidPasswordAttempts="5" minRequiredPasswordLength="6" minRequiredNonalphanumericCharacters="0" passwordAttemptWindow="10" passwordStrengthRegularExpression="" applicationName="/" />
      </providers>
    </membership>
    <!--
            The <customErrors> section enables configuration 
            of what to do if/when an unhandled error occurs 
            during the execution of a request. Specifically, 
            it enables developers to configure html error pages 
            to be displayed in place of a error stack trace.

        <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
            <error statusCode="403" redirect="NoAccess.htm" />
            <error statusCode="404" redirect="FileNotFound.htm" />
        </customErrors>
    -->
    <customErrors defaultRedirect="/Data/Index" mode="On">
      <error redirect="/Data/index" statusCode="404" />
    </customErrors>
    <pages controlRenderingCompatibilityVersion="4.0" clientIDMode="AutoID">
      <namespaces>
        <add namespace="System.Web.Mvc" />
        <add namespace="System.Web.Mvc.Ajax" />
        <add namespace="System.Web.Mvc.Html" />
        <add namespace="System.Web.Routing" />
        <add namespace="System.Linq" />
        <add namespace="System.Collections.Generic" />
      </namespaces>
    </pages>
    <httpHandlers>
      <add verb="*" path="*.mvc" validate="false" type="System.Web.Mvc.MvcHttpHandler, System.Web.Mvc, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
    </httpHandlers>
  </system.web>
  <system.web.extensions>
    <scripting>
      <webServices>
        <jsonSerialization maxJsonLength="2147483644" />
      </webServices>
    </scripting>
  </system.web.extensions>
  <!-- 
        The system.webServer section is required for running ASP.NET AJAX under Internet
        Information Services 7.0.  It is not necessary for previous version of IIS.
  -->
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false" />
    <modules runAllManagedModulesForAllRequests="true" />
    <handlers>
      <remove name="MvcHttpHandler" />
      <remove name="UrlRoutingHandler" />
      <add name="MvcHttpHandler" preCondition="integratedMode" verb="*" path="*.mvc" type="System.Web.Mvc.MvcHttpHandler, System.Web.Mvc, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
    </handlers>
    <httpErrors existingResponse="PassThrough" />
  </system.webServer>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Configuration.Install" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.0.0" newVersion="4.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Common.Logging.Core" publicKeyToken="af08829b84f0328e" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.3.1.0" newVersion="3.3.1.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Common.Logging" publicKeyToken="af08829b84f0328e" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.3.1.0" newVersion="3.3.1.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="log4net" publicKeyToken="669e0ddf0bb1aa2a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.0.8.0" newVersion="2.0.8.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="IronPython" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.1.0.0" newVersion="1.1.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-10.0.0.0" newVersion="10.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="EntityFramework" publicKeyToken="b77a5c561934e089" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.1.0.0" newVersion="4.1.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Helpers" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-5.2.3.0" newVersion="5.2.3.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.0.0" newVersion="4.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <system.serviceModel>
    <behaviors>
      <endpointBehaviors>
        <behavior name="defaultBehaviour">
          <dataContractSerializer maxItemsInObjectGraph="999999999" />
        </behavior>
      </endpointBehaviors>
    </behaviors>
    <bindings>
      <netTcpBinding>
        <binding name="tcpBinding" receiveTimeout="0:01:00" maxBufferSize="25600000" maxReceivedMessageSize="25600000">
          <readerQuotas maxStringContentLength="25600000" />
        </binding>
        <binding name="tcpStatusBinding" receiveTimeout="00:00:02" maxBufferSize="25600000" maxReceivedMessageSize="25600000">
          <readerQuotas maxStringContentLength="25600000" />
        </binding>
      </netTcpBinding>
      <wsHttpBinding>
        <binding name="WSHttpBinding_IEventData" closeTimeout="00:01:00" openTimeout="00:00:10" receiveTimeout="00:00:05" sendTimeout="00:01:00" bypassProxyOnLocal="false" transactionFlow="false" hostNameComparisonMode="StrongWildcard" maxBufferPoolSize="524288" maxReceivedMessageSize="6553600" messageEncoding="Text" textEncoding="utf-8" useDefaultWebProxy="false" allowCookies="false">
          <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384" maxBytesPerRead="40960" maxNameTableCharCount="16384" />
          <security mode="None" />
        </binding>
      </wsHttpBinding>
    </bindings>
    <!-- Note: As the name suggests, the client XML block is only required on 
         the applications calling into the RDS.  For distributed operation of 
         the TDR service on a serpatated machine in a Windows 2008 Active 
         Directory you must override the localhost within the URL address 
         field with the Fully Qualified Domain Name (FQDN) of the server 
         in the AD (e.g. swhrds0test.ajenti.local), and then replace the 
         localhost part of the servicePrincipalName feild with the NETBIOS 
         machine name (e.g. swhrds0test) -->
    <client>
      <endpoint name="rdsApi1" address="net.tcp://swhrds0test:8812/Rds/RdsApi" binding="netTcpBinding" bindingConfiguration="tcpBinding" contract="RdsApiSvc.IRdsApiService" behaviorConfiguration="defaultBehaviour">
        <identity>
          <servicePrincipalName value="RdsApi/localhost" />
        </identity>
      </endpoint>
      <endpoint name="rdsApi2" address="net.tcp://swhrds0test:8813/Rds/RdsApi" binding="netTcpBinding" bindingConfiguration="tcpBinding" contract="RdsApiSvc.IRdsApiService" behaviorConfiguration="defaultBehaviour">
        <identity>
          <servicePrincipalName value="RdsApi/localhost" />
        </identity>
      </endpoint>
      <endpoint name="liveApi" address="net.tcp://swhrds0test:8811/LiveManager/LiveDataSvc" binding="netTcpBinding" bindingConfiguration="tcpBinding" contract="LiveDataSvc.ILiveDataSvc" behaviorConfiguration="defaultBehaviour">
        <identity>
          <servicePrincipalName value="LiveDataSvc/localhost" />
        </identity>
      </endpoint>
      <!-- Realtime Logging Configuration -->
      <endpoint name="RDS1" address="net.tcp://entura-app03:42769/rds/events" binding="netTcpBinding" bindingConfiguration="tcpStatusBinding" contract="common.logging.IEventData">
        <identity>
          <servicePrincipalName value="RDS/localhost" />
        </identity>
      </endpoint>
      <endpoint name="RDS2" address="net.tcp://entura-app03:42771/rds/events" binding="netTcpBinding" bindingConfiguration="tcpStatusBinding" contract="common.logging.IEventData">
        <identity>
          <servicePrincipalName value="RDS/localhost" />
        </identity>
      </endpoint>
      <endpoint name="TM" address="net.tcp://entura-app02:42768/tm/events" binding="netTcpBinding" bindingConfiguration="tcpStatusBinding" contract="common.logging.IEventData">
        <identity>
          <servicePrincipalName value="TM/localhost" />
        </identity>
      </endpoint>
      <endpoint name="TDR" address="net.tcp://entura-app02:42767/tdr/events" binding="netTcpBinding" bindingConfiguration="tcpStatusBinding" contract="common.logging.IEventData">
        <identity>
          <servicePrincipalName value="TDR/localhost" />
        </identity>
      </endpoint>
      <endpoint name="RA1" address="net.tcp://entura-app03:42766/ra/events" binding="netTcpBinding" bindingConfiguration="tcpStatusBinding" contract="common.logging.IEventData">
        <identity>
          <servicePrincipalName value="RA/localhost" />
        </identity>
      </endpoint>
      <endpoint name="RA2" address="net.tcp://entura-app03:42768/ra/events" binding="netTcpBinding" bindingConfiguration="tcpStatusBinding" contract="common.logging.IEventData">
        <identity>
          <servicePrincipalName value="RA/localhost" />
        </identity>
      </endpoint>
      <endpoint name="EM1" address="net.tcp://entura-app02:42765/em/events" binding="netTcpBinding" bindingConfiguration="tcpStatusBinding" contract="common.logging.IEventData">
        <identity>
          <servicePrincipalName value="EM/localhost" />
        </identity>
      </endpoint>
      <endpoint name="EM2" address="net.tcp://entura-app02:42766/em/events" binding="netTcpBinding" bindingConfiguration="tcpStatusBinding" contract="common.logging.IEventData">
        <identity>
          <servicePrincipalName value="EM/localhost" />
        </identity>
      </endpoint>
      <endpoint name="SCH" address="net.tcp://entura-app02:42764/sch/events" binding="netTcpBinding" bindingConfiguration="tcpStatusBinding" contract="common.logging.IEventData">
        <identity>
          <servicePrincipalName value="SCH/localhost" />
        </identity>
      </endpoint>
      <endpoint name="LIVE" address="net.tcp://entura-app03:42763/live/events" binding="netTcpBinding" bindingConfiguration="tcpStatusBinding" contract="common.logging.IEventData">
        <identity>
          <servicePrincipalName value="LIVE/localhost" />
        </identity>
      </endpoint>
      <endpoint name="REP" address="http://testdata.ajenti.com.au/Replication/EventData.svc" binding="wsHttpBinding" bindingConfiguration="WSHttpBinding_IEventData" contract="common.logging.IEventData" />
    </client>
  </system.serviceModel>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="mssqllocaldb" />
      </parameters>
    </defaultConnectionFactory>
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>


</configuration>